#generates possible molecules containing C, H, N, O and S

nagenmz<-function(Cmin,Cmax,DBE,On,Sn,Nn,massmin,massmax){

###Define the input variables: The largest Carbon, Oxygen, Sulfur and Nitrogen numbers, Z number and mass range through which to loop.

Cmin <-as.numeric(Cmin)
Cmax <- as.numeric(Cmax)
DBE <- as.numeric(DBE)
On <- as.numeric(On)
Sn<-as.numeric(Sn)
Nn<-as.numeric(Nn)
massmin <- as.numeric(massmin)
massmax <- as.numeric(massmax)

###Next define matrix with 7 columns of all zeros. This eases the memory handling.

d<-matrix(c(0,0,0,0,0,0,0),ncol=7)

###Open the nested loop.

for(m in 0:Nn){
for(l in 0:Sn){
for(i in 0:On){
for(j in 2*0:DBE){
for(k in Cmin:Cmax){
#The following rule if(k<abs(j)) states that the number of carbons in a possible
#organic acid must be more than the Z number. Z number = -2 means there is
#one ring in the structure. It follows that a 2-carbon structure cannot have a
#ring, but a 3-C structure can have a ring. In the case of this rule being
#violated, the current loop is null and the next loop begins.

if(k<abs(j) | k>(2*k+j)){is.null(k)} else {
a<-12*k+2*k+2-j+1+m+16*i+15*m+32*l
if(a<massmax & a>massmin) d<-rbind(d,c(a,-j,k,2*k-j+1+m,i,m,l))
}
}

}

}
}
}
colnames(d)<-c("Mass","Z-number","C","H","O","N","S")
d<-d[-1,]

}
